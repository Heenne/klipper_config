#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X125 Y125 Z30 F3600
    RESTORE_GCODE_STATE NAME=STATE_G32

#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:
    {% set bed_temp = params.BED_TEMP|default(100)|float %}
    {% set hotend_temp = params.HOTEND_TEMP|default(235)|float %}
    
    _HEATER_ON ; Use helper function to turn on heated bed relay

    M140 S{bed_temp} ; Heat bed to target temp
    M104 S{hotend_temp-50} ; Heat extruder to target temp


    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M83 ; use relative distances for extrusion

    G28 # Home all axis for nozzle cleaning
    _clean_nozzle # Clean nozzle before starting real homing

    G32                            ; home all axes and qgl
    BED_MESH_CALIBRATE ; Create a bed mesh

    G90                            ; absolute positioning

    M107 ; Turn off fans
    M109 S{hotend_temp}	; Prehet extruder but keep temp low to not ooze
    M190 S{bed_temp} ; Set bed temp but dont wait

    ; Prime Line
	G0 X30 Y10 Z0.3 F5000 ; Move to 
    G92 E0	; Set extruder to 0
    G1 E30 F300 ; Preload the nozzle with filament and make a little blob
    G1 X85 E10 F1200 ; Extrude prime line 
    G92 E0	; Set extruder to 0

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-25 F1800                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR

    _HEATER_OFF ; Turn off the relay for the heated bed immediatly after the print

[gcode_macro M900]
description: Set pressure advance
gcode:
    SET_PRESSURE_ADVANCE ADVANCE={params.K|default(0)}

# For reference see https://github.com/VoronDesign/VoronUsers/blob/master/orphaned_mods/printer_mods/edwardyeeks/Decontaminator_Purge_Bucket_%26_Nozzle_Scrubber/Macros/nozzle_scrub.cfg
[gcode_macro _clean_nozzle]
variable_wipe_quantity: 5

# Start position on the x axis of the printer
variable_brush_x_start: 25
# Length of the wiping motion through the brush. It should be longer than the brush plus the offset to the brush_x_start position
variable_wipe_motion_length: 50

# Top of the brush is at an absolute z height of the value
variable_brush_top: 3.4
# Clearance for the travelmove to the bucket in z
variable_clearance_z: 10
# Height of how much the nozzle should be plunged into the brush
variable_plunge_height: 2

# Speeds
variable_travel_speed_xy: 3000 # Travel speed to the brush in x and y
variable_travel_speed_z: 1500 # Travel speed to the brush in z
variable_wipe_speed_xy: 5000 # Wipe speed for the left right motion 


gcode:
    # First, check if the axes are homed.
    {% if "xyz" in printer.toolhead.homed_axes %}
        ## Save the gcode state in this macro instance.
        SAVE_GCODE_STATE NAME=clean_nozzle

        # Set to absolute positioning.
        G90

        # Grab max position of Y-axis from config to use in setting a fixed y position for location_bucket_rear = True.
        {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

        # Move up to clear travel height
        G1 Z{brush_top + clearance_z} F{travel_speed_z}

        # Move toolhead back to y location of the nozzle brush
        G1 Y{Ry} F{travel_speed_xy}

        # Move to x start position of the brushing motion
        G1 X{brush_x_start} F{travel_speed_xy}

        ## Move nozzle down into brush.
        G1 Z{brush_top - plunge_height} F{travel_speed_z}

        ## Perform wipe. Wipe direction based off bucket_pos for cool random scrubby routine.
        {% for wipes in range(1, wipe_quantity) %}
            G1 X{brush_x_start + wipe_motion_length} F{wipe_speed_xy}
            G1 X{brush_x_start} F{wipe_speed_xy}
        {% endfor %}

        ## Clear from area.
        M117 Nozzle cleaned!
        G1 Z{brush_top + clearance_z} F{travel_speed_z}
        
        ## Restore the gcode state to how it was before the macro.
        RESTORE_GCODE_STATE NAME=clean_nozzle

    {% else %}

        # raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
        { action_raise_error("Please home your axes!") }
        M117 Please home first!

    {% endif %}